// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Auth {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("auth")
}

model Project {
  id                 String          @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  description        String
  technologies       String[]
  frontEndGithubLink String?
  backEndGithubLink  String?
  frontEndLiveLink   String?
  backEndLiveLink    String?
  details            String
  thumbnail          String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  featured           Boolean         @default(false)
  category           ProjectCategory @relation(fields: [categoryId], references: [id])
  categoryId         String          @db.ObjectId

  @@map("projects")
}

model ProjectCategory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  project   Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("projectCategories")
}

model Skill {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  icon            String
  level           SkillLevel
  skillCategory   SkillCategory @relation(fields: [skillCategoryId], references: [id])
  skillCategoryId String        @db.ObjectId
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("skills")
}

model SkillCategory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  skills    Skill[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("skillCategories")
}

enum SkillLevel {
  Junior
  Intermediate
  Expert
}

model Blog {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  content    String
  category   BlogCategory @relation(fields: [categoryId], references: [id])
  categoryId String       @db.ObjectId
  published  Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@map("blogs")
}

model BlogCategory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      Blog[]

  @@map("blogCategories")
}
